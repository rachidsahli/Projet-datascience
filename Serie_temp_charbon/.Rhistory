t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
# Décomposition de la série temporelle
dec_2022 = decompose(charbon_2022, type = "additive")
# Calcul du CV (données sans saisonnalité)
CVS_2022 <- charbon_2022 - dec_2022$seasonal
# Extraire les dernières valeurs pour l'analyse
CVSend_2022 <- tail(CVS_2022, n = 36)
# Conversion en vecteurs
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
# Régression linéaire
reg_2022 <- lm(y_2022 ~ x_2022)
# Création de la séquence t_2022 pour l'année 2022
t_2022 <- seq(from = 2022, by = 1/12, length.out = 12)
# Extraire la saisonnalité pour 12 mois
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
# Vérifier que t_2022 et season_2022 ont la même longueur
length(t_2022)  # Doit être égal à 12
length(season_2022)  # Doit être égal à 12
# Calcul de la prévision (Tendance + Saison)
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022
# Tracer la série temporelle et la prévision
plot(charbon_2022, xlim = c(2001, 2023))
lines(t_2022, z_2022, col = "purple", lwd = 2)
charbon_2022 <- read.table("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/charbon_usa.txt", col.names = "Charbon mWh")
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
plot(CVS_2022)
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
summary(reg_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022
plot(charbon_2022, xlim = c(2020, 2023))
lines(t_2022, z_2022, col="purple", lwd=2)
lines(charbon, col="cyan",lwd=3)
runApp('Documents/Projet-datascience/Serie_temp_charbon')
runApp('Documents/Projet-datascience/Serie_temp_charbon')
source('/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/scripts/0_environnement.R')
charbon_2022 <- read.table("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/charbon_usa.txt", col.names = "Charbon mWh")
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
season_2022
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
t_2022
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,1))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
x
x_2022
y_2022
reg_2022 <- lm(y_2022~x_2022)
reg_2022
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
reg_2022
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 0), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
reg_2022
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]) + season_2022 # Problème avec le t2
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
charbon.hw.2022 <- HoltWinters(charbon_2022)
predict_hw_2022 <- predict(charbon.hw.2022, n.ahead = 12)
zbon_2022 <- suppressWarnings(arima(charbon_2022, order = c(6, 1, 5), seasonal = list(order = c(2, 1, 2), period = 12)))
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2023)),
yaxis = list(title = "Charbon (mWh)")
)
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
reg_2022
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
dec_2022 = decompose(charbon_2022)
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2023 + 11/12, by = 1/12)
t_2022
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
charbon.hw.2022 <- HoltWinters(charbon_2022)
predict_hw_2022 <- predict(charbon.hw.2022, n.ahead = 12)
library(tseries)
zbon_2022 <- suppressWarnings(arima(charbon_2022, order = c(6, 1, 5), seasonal = list(order = c(2, 1, 2), period = 12)))
prev_2022 <- predict(zbon_2022, n.ahead = 12)
Prevision_2022 <- function(charbon_2022) {
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2024)),
yaxis = list(title = "Charbon (mWh)")
)
}
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2024)),
yaxis = list(title = "Charbon (mWh)")
)
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/13)
t_2022
t_2022 <- seq(2022, 2022 + 11/13, by = 1/13)
t_2022
t_2022 <- seq(2022, 2023 + 11/13, by = 1/13)
t_2022
t_2022 <- seq(2022, 2023 + 11/12, by = 1/13)
t_2022
t_2022 <- seq(2022, 2023 + 11/12, by = 1/12)
t_2022
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
t_2022
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2] * t_2022) + season_2022 # Problème avec le t2
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
reg_2022 <- lm(y_2022~x_2022)
reg_2022
source('/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/scripts/0_environnement.R')
charbon_2022 <- read.table("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/charbon_usa.txt", col.names = "Charbon mWh")
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
z_2022 <- (reg_2022$coefficients[1] + (reg_2022$coefficients[2]*t_2022))+season_2022 # Problème avec le t2
z_2022 <- ((reg_2022$coefficients[1] + reg_2022$coefficients[2])*t_2022)+season_2022 # Problème avec le t2
charbon.hw.2022 <- HoltWinters(charbon_2022)
predict_hw_2022 <- predict(charbon.hw.2022, n.ahead = 12)
library(tseries)
zbon_2022 <- suppressWarnings(arima(charbon_2022, order = c(6, 1, 5), seasonal = list(order = c(2, 1, 2), period = 12)))
prev_2022 <- predict(zbon_2022, n.ahead = 12)
Prevision_2022 <- function(charbon_2022) {
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2024)),
yaxis = list(title = "Charbon (mWh)")
)
}
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2024)),
yaxis = list(title = "Charbon (mWh)")
)
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022) # Problème avec le t2
#CVS : série corrigé des variations saisonnieres
CVS1<-charbon_2022-dec_2022$seasonal
plot(CVS1)
# fin de la CVS
CVSend1<-tail(CVS1,n=36)
y1=as.vector(CVSend1)
x1=as.vector(time(CVSend1))
#régression
reg1<-lm(y1~x1)
#reg1<-lm(y~x)
summary(reg1)
reg1<-lm(y1~x1)
#Graphique
plot(CVSend1, main = "Découpe de la série ajustée avec la droite de régression", xlab="Année",ylab="MGW/H",col="orange", lwd=2)
#droite de régression
abline(reg1$coef)
#découpe année
t1<-seq(2022,2022+11/12, by=1/12)
t1
length(t1)
#saison
season1<-as.vector(head(dec1$seasonal,n=12))
#saison
season1<-as.vector(head(dec_2022$seasonal,n=12))
#tendance + saison
z1<-(reg1$coefficients[1]+reg1$coefficients[2]*t1)+season1
#Graphique prévisosn méthode 1
plot(data1, main="Prévision de la production d'électricité par combustion de charbon en 2022", cex.main=1,
xlab="Année", ylab="MGW/H", xlim=c(2021,2023),ylim = c(40000,110000),lwd=2)
#Graphique prévisosn méthode 1
plot(charbon_2022, main="Prévision de la production d'électricité par combustion de charbon en 2022", cex.main=1,
xlab="Année", ylab="MGW/H", xlim=c(2021,2023),ylim = c(40000,110000),lwd=2)
lines(t1,z1, col="purple", lwd=2)#prévision
lines(data, col="cyan",lwd=3)#comparé avec vrai valeur
legend("topright", legend=c("Données", "Prévision Trend + season"),
text.col=c("cyan",  "purple"), cex=0.8)
charbon_2022 <- read.table("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/charbon_usa.txt", col.names = "Charbon mWh")
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,0))
dec1 = decompose(charbon_2022, type="additive")
#CVS : série corrigé des variations saisonnieres
CVS1<-charbon_2022-dec1$seasonal
plot(CVS1)
# fin de la CVS
CVSend1<-tail(CVS1,n=36)
y1=as.vector(CVSend1)
x1=as.vector(time(CVSend1))
#régression
reg1<-lm(y1~x1)
#reg1<-lm(y~x)
summary(reg1)
reg1<-lm(y1~x1)
#Graphique
plot(CVSend1, main = "Découpe de la série ajustée avec la droite de régression", xlab="Année",ylab="MGW/H",col="orange", lwd=2)
#droite de régression
abline(reg1$coef)
#découpe année
t1<-seq(2022,2022+11/12, by=1/12)
t1
length(t1)
#saison
season1<-as.vector(head(dec1$seasonal,n=12))
#tendance + saison
z1<-(reg1$coefficients[1]+reg1$coefficients[2]*t1)+season1
runApp('Documents/Projet-datascience/Serie_temp_charbon')
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,1))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
t_2022 <- seq(2022, 2022 + 11/11, by = 1/11)
t_2022
length(t_2022)
t_2022 <- seq(2022, 2022 + 11/11, by = 1/11)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
season_2022 <- as.vector(head(dec_2022$seasonal, n = 11))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
charbon.hw.2022 <- HoltWinters(charbon_2022)
predict_hw_2022 <- predict(charbon.hw.2022, n.ahead = 12)
zbon_2022 <- suppressWarnings(arima(charbon_2022, order = c(6, 1, 5), seasonal = list(order = c(2, 1, 2), period = 12)))
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2024)),
yaxis = list(title = "Charbon (mWh)")
)
t_2022 <- seq(2022, 2022 + 12/12, by = 1/12)
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,1))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 12/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
charbon.hw.2022 <- HoltWinters(charbon_2022)
predict_hw_2022 <- predict(charbon.hw.2022, n.ahead = 12)
zbon_2022 <- suppressWarnings(arima(charbon_2022, order = c(6, 1, 5), seasonal = list(order = c(2, 1, 2), period = 12)))
dates = time(charbon_2022)
dates_pred <- seq(max(dates), max(dates) + 12/12, by = 1/12)[1:12]
plot_ly() %>%
add_lines(x = time(charbon), y = charbon, mode = 'lines',
name = 'Données',
line = list(color = 'black', width = 1.2)) %>%
add_lines(x = dates_pred, y = z_2022, mode = 'lines',
name = 'Trend + saison',
line = list(color = 'orange', width = 2)) %>%
add_lines(x = dates_pred, y = predict_hw_2022, mode = 'lines',
name = 'Holt-Winters',
line = list(color = 'red', width = 2)) %>%
add_lines(x = dates_pred, y = prev_2022$pred, mode = 'lines',
name = 'ARMA',
line = list(color = 'purple', width = 2)) %>%
layout(
title = "Prévision de la production d'éléctricité par combustion de charbon en 2022",
xaxis = list(title = "Année", range = c(2021, 2024)),
yaxis = list(title = "Charbon (mWh)")
)
charbon.hw.2022 <- HoltWinters(charbon_2022)
charbon_2022 <- read.table("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/charbon_usa.txt", col.names = "Charbon mWh")
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,1))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
charbon_2022 <- read.table("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon/charbon_usa.txt", col.names = "Charbon mWh")
charbon_2022 <- ts(charbon_2022, frequency = 12, start = c(2001, 1), end = c(2022,1))
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2022 <- seq(2022, 2022 + 12/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
length(t_2022)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 13))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
t_2022 <- seq(2022, 2022 + 12/12, by = 1/12)
length(t_2022)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
season_2022 <- as.vector(head(dec_2022$seasonal, n = 13))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
t_2022 <- seq(2022, 2022 + 11/12, by = 1/13)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 13))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2022)+season_2022 # Problème avec le t2
runApp('Documents/Projet-datascience/Serie_temp_charbon')
runApp('Documents/Projet-datascience/Serie_temp_charbon')
plot(charbon_2022)
lines(predict(charbon.hw.2022, n.ahead = 13), col = "red", lwd = 2)
plot(charbon_2022, xlim = c(2021, 2024))
lines(predict(charbon.hw.2022, n.ahead = 13), col = "red", lwd = 2)
lines(t_2022, z_2022, col="purple", lwd=2)
lines(charbon, col="cyan",lwd=3)
lines(prev_2022$pred, col="blue", lwd = 2)
plot(charbon_2022, xlim = c(2021, 2023))
lines(predict(charbon.hw.2022, n.ahead = 13), col = "red", lwd = 2)
lines(t_2022, z_2022, col="purple", lwd=2)
lines(charbon, col="cyan",lwd=3)
lines(prev_2022$pred, col="blue", lwd = 2)
z_2022
runApp('Documents/Projet-datascience/Serie_temp_charbon')
dec_2022 = decompose(charbon_2022, type = "additive")
CVS_2022 <- charbon_2022 - dec_2022$seasonal
CVSend_2022 <- tail(CVS_2022, n = 36)
y_2022 = as.vector(CVSend_2022)
x_2022 = as.vector(time(CVSend_2022))
reg_2022 <- lm(y_2022~x_2022)
t_2028 <- seq(2022, 2022 + 11/12, by = 1/12)
season_2022 <- as.vector(head(dec_2022$seasonal, n = 12))
z_2022 <- (reg_2022$coefficients[1] + reg_2022$coefficients[2]*t_2028)+season_2022 # Problème avec le t2
runApp('Documents/Projet-datascience/Serie_temp_charbon')
runApp('Documents/Projet-datascience/Serie_temp_charbon')
runApp('Documents/Projet-datascience/Serie_temp_charbon')
runApp('Documents/Projet-datascience/Serie_temp_charbon')
library(rsconnect)
runApp('Documents/Projet-datascience/Serie_temp_charbon')
source(file.path("scripts", "0_environnement.R"))
ls
getwd()
setwd("/Users/rs777/Documents/Projet-datascience/Serie_temp_charbon")
source(file.path("scripts", "0_environnement.R"))
